"""Create DB

Revision ID: 4b396d363e75
Revises: 
Create Date: 2023-12-16 13:38:25.666678

"""
from typing import Sequence, Union

from alembic import op
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4b396d363e75'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    template = op.create_table('template',
                                sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                                sa.Column('name', sa.String(), nullable=False),
                                sa.PrimaryKeyConstraint('id'),
                                sa.UniqueConstraint('name')
    )
    op.create_table('user',
                    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('template_id', sa.Integer(), nullable=False),
                    sa.Column('obs_host', sa.String(), nullable=False),
                    sa.Column('obs_port', sa.Integer(), nullable=False),
                    sa.Column('obs_password', sa.String(), nullable=False),
                    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column('email', sa.String(length=320), nullable=False),
                    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('is_superuser', sa.Boolean(), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['template_id'], ['template.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('obs_scene',
    sa.Column('team_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('scene', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photo',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('embeding', postgresql.ARRAY(sa.Float()), nullable=False),
    sa.Column('team_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )

    op.bulk_insert(
        template,
        [
            {
                "id": 0,
                "name": "TITLE",
            },
            {
                "id": 1,
                "name": "TITLE1",
            },
            {
                "id": 2,
                "name": "TITLE2",
            },
            {
                "id": 3,
                "name": "TITLE3",
            },
        ],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('photo')
    op.drop_table('obs_scene')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('template')
    # ### end Alembic commands ###
